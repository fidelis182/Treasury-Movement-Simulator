{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fidelis projects\\\\Treasury Movement Simulator\\\\treasury-simulator\\\\src\\\\components\\\\Form\\\\TransferForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./transfer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TransferForm({\n  fromAccount,\n  accounts = [],\n  onTransfer\n}) {\n  _s();\n  const [account_From, setAccount_From] = useState(\"\");\n  const [account_To, setAccount_To] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [currency, setCurrency] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [validation, setValidation] = useState(false);\n  useEffect(() => {\n    if (fromAccount) {\n      setAccount_From(fromAccount);\n    }\n  }, [fromAccount]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const amountNum = parseFloat(amount);\n    if (isNaN(amountNum)) {\n      alert(\"Amount must be a valid number.\");\n      return;\n    }\n    const from = accounts.find(acc => acc.name === account_From);\n    if (from && amountNum > from.balance) {\n      alert(\"Insufficient balance.\");\n      return;\n    }\n    const AccountData = {\n      account_From,\n      account_To,\n      amount: amountNum,\n      currency,\n      date,\n      comment\n    };\n    fetch(\"http://localhost:5000/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(AccountData)\n    }).then(res => {\n      if (res.ok) {\n        onTransfer(AccountData); // 🔁 pass data to parent\n        alert(\"Transfer successful\");\n      } else {\n        throw new Error(\"Failed to save transaction\");\n      }\n    }).catch(err => console.log(err.message));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Transfer Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"account_from\",\n          children: \"Account From:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"account_from\",\n          value: account_From,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"account_To\",\n          children: \"Account To:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"account_To\",\n          value: account_To,\n          onChange: e => setAccount_To(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--Select Account--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), accounts.filter(acc => acc.name !== account_From).map(acc => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: acc.name,\n            children: acc.name\n          }, acc.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"currency\",\n          children: \"Currency:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"currency\",\n          value: currency,\n          onChange: e => setCurrency(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comment\",\n          children: \"Comment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"comment\",\n          value: comment,\n          onChange: e => setComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-transfer\",\n          children: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  };\n}\n_s(TransferForm, \"cf9fPTl4Ke9kHEjU1c/xlxuDURY=\");\n_c = TransferForm;\nvar _c;\n$RefreshReg$(_c, \"TransferForm\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","TransferForm","fromAccount","accounts","onTransfer","_s","account_From","setAccount_From","account_To","setAccount_To","amount","setAmount","currency","setCurrency","date","setDate","comment","setComment","validation","setValidation","handleSubmit","e","preventDefault","amountNum","parseFloat","isNaN","alert","from","find","acc","name","balance","AccountData","fetch","method","headers","body","JSON","stringify","then","res","ok","Error","catch","err","console","log","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","readOnly","onChange","target","required","filter","map","_c","$RefreshReg$"],"sources":["D:/Fidelis projects/Treasury Movement Simulator/treasury-simulator/src/components/Form/TransferForm.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./transfer.css\";\r\n\r\nexport default function TransferForm({\r\n  fromAccount,\r\n  accounts = [],\r\n  onTransfer,\r\n}) {\r\n  const [account_From, setAccount_From] = useState(\"\");\r\n  const [account_To, setAccount_To] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [currency, setCurrency] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [comment, setComment] = useState(\"\");\r\n  const [validation, setValidation] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (fromAccount) {\r\n      setAccount_From(fromAccount);\r\n    }\r\n  }, [fromAccount]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const amountNum = parseFloat(amount);\r\n\r\n    if (isNaN(amountNum)) {\r\n      alert(\"Amount must be a valid number.\");\r\n      return;\r\n    }\r\n\r\n    const from = accounts.find((acc) => acc.name === account_From);\r\n    if (from && amountNum > from.balance) {\r\n      alert(\"Insufficient balance.\");\r\n      return;\r\n    }\r\n\r\n    const AccountData = {\r\n      account_From,\r\n      account_To,\r\n      amount: amountNum,\r\n      currency,\r\n      date,\r\n      comment,\r\n    };\r\n\r\n    fetch(\"http://localhost:5000/transactions\", {\r\n      method: \"POST\",\r\n      headers: { \"content-type\": \"application/json\" },\r\n      body: JSON.stringify(AccountData),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          onTransfer(AccountData); // 🔁 pass data to parent\r\n          alert(\"Transfer successful\");\r\n        } else {\r\n          throw new Error(\"Failed to save transaction\");\r\n        }\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n\r\n    return (\r\n      <div className=\"Container\">\r\n        <h2>Transfer Form</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor=\"account_from\">Account From:</label>\r\n          <input type=\"text\" id=\"account_from\" value={account_From} readOnly />\r\n\r\n          <label htmlFor=\"account_To\">Account To:</label>\r\n          <select\r\n            id=\"account_To\"\r\n            value={account_To}\r\n            onChange={(e) => setAccount_To(e.target.value)}\r\n            required\r\n          >\r\n            <option value=\"\">--Select Account--</option>\r\n            {accounts\r\n              .filter((acc) => acc.name !== account_From)\r\n              .map((acc) => (\r\n                <option key={acc.id} value={acc.name}>\r\n                  {acc.name}\r\n                </option>\r\n              ))}\r\n          </select>\r\n\r\n          <label htmlFor=\"amount\">Amount:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"amount\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            required\r\n          />\r\n\r\n          <label htmlFor=\"currency\">Currency:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"currency\"\r\n            value={currency}\r\n            onChange={(e) => setCurrency(e.target.value)}\r\n            required\r\n          />\r\n\r\n          <label htmlFor=\"date\">Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n            required\r\n          />\r\n\r\n          <label htmlFor=\"comment\">Comment:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"comment\"\r\n            value={comment}\r\n            onChange={(e) => setComment(e.target.value)}\r\n          />\r\n\r\n          <button type=\"submit\" className=\"btn btn-transfer\">\r\n            Transfer\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}