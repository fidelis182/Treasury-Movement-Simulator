{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fidelis projects\\\\Treasury Movement Simulator\\\\treasury-simulator\\\\src\\\\components\\\\AccountList\\\\AccountList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./account.css\";\nimport TransferForm from \"../Form/TransferForm\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AccountList() {\n  _s();\n  const [accounts, setAccount] = useState([]);\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  useEffect(() => {\n    // to get data from the API\n    fetch(\"http://localhost:5000/accounts\")\n    // promise\n    .then(res => res.json())\n    // to update data\n    .then(data => setAccount(data)).catch(err => console.log(err.message));\n  }, []);\n  const toggleForm = accounts => {\n    setSelectedAccount(prev => prev && prev.id === accounts.id ? null : accounts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container width-60\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account List \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Account_name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: accounts && accounts.map(item => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.currency\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.balance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleForm(item),\n                  className: \"btn-primary\",\n                  children: \"Transfer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), selectedAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-0 left-0 w-full h-full z-50 bg-white bg-opacity-95 p-6 shadow-xl\",\n      children: [/*#__PURE__*/_jsxDEV(TransferForm, {\n        fromAccount: selectedAccount.name,\n        accounts: accounts,\n        onTransfer: newTx => {\n          setTransactions(prev => [...prev, newTx]);\n          setSelectedAccount(null); // ðŸ‘ˆ close the form\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedAccount(null),\n        className: \"mt-4 btn btn-secondary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountList, \"OD+3lOJkjWW9OF+8lD8kRp4QkkQ=\");\n_c = AccountList;\nvar _c;\n$RefreshReg$(_c, \"AccountList\");","map":{"version":3,"names":["useEffect","useState","TransferForm","React","jsxDEV","_jsxDEV","AccountList","_s","accounts","setAccount","selectedAccount","setSelectedAccount","fetch","then","res","json","data","catch","err","console","log","message","toggleForm","prev","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","Fragment","name","currency","balance","onClick","fromAccount","onTransfer","newTx","setTransactions","_c","$RefreshReg$"],"sources":["D:/Fidelis projects/Treasury Movement Simulator/treasury-simulator/src/components/AccountList/AccountList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./account.css\";\r\nimport TransferForm from \"../Form/TransferForm\";\r\nimport React from \"react\";\r\n\r\nexport default function AccountList() {\r\n  const [accounts, setAccount] = useState([]);\r\n  const [selectedAccount, setSelectedAccount] = useState(null);\r\n  useEffect(() => {\r\n    // to get data from the API\r\n    fetch(\"http://localhost:5000/accounts\")\r\n      // promise\r\n      .then((res) => res.json())\r\n      // to update data\r\n      .then((data) => setAccount(data))\r\n      .catch((err) => console.log(err.message));\r\n  }, []);\r\n  const toggleForm = (accounts) => {\r\n    setSelectedAccount((prev) =>\r\n      prev && prev.id === accounts.id ? null : accounts\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"container width-60\">\r\n      <div className=\"table-container relative\">\r\n        <h2>Account List </h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Account_name</th>\r\n              <th>Currency</th>\r\n              <th>Balance</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {accounts &&\r\n              accounts.map((item) => (\r\n                <React.Fragment key={item.id}>\r\n                  <tr>\r\n                    <td>{item.id}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.currency}</td>\r\n                    <td>{item.balance}</td>\r\n                    <td>\r\n                      <button\r\n                        onClick={() => toggleForm(item)}\r\n                        className=\"btn-primary\"\r\n                      >\r\n                        Transfer\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                </React.Fragment>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {selectedAccount && (\r\n        <div className=\"absolute top-0 left-0 w-full h-full z-50 bg-white bg-opacity-95 p-6 shadow-xl\">\r\n          <TransferForm\r\n            fromAccount={selectedAccount.name}\r\n            accounts={accounts}\r\n            onTransfer={(newTx) => {\r\n              setTransactions((prev) => [...prev, newTx]);\r\n              setSelectedAccount(null); // ðŸ‘ˆ close the form\r\n            }}\r\n          />\r\n\r\n          <button\r\n            onClick={() => setSelectedAccount(null)}\r\n            className=\"mt-4 btn btn-secondary\"\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}