{"ast":null,"code":"import{useEffect,useState}from\"react\";import\"./account.css\";import TransferForm from\"../Form/TransferForm\";import React from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function AccountList(){const[accounts,setAccount]=useState([]);const[selectedAccount,setSelectedAccount]=useState(null);const[view,setView]=useState(\"accounts\");// \"accounts\" or \"transactions\"\nconst[transactions,setTransactions]=useState([]);useEffect(()=>{// to get data from the API\nfetch(\"http://localhost:5000/accounts\")// promise\n.then(res=>res.json())// to update data\n.then(data=>setAccount(data)).catch(err=>console.log(err.message));},[]);const toggleForm=accounts=>{setSelectedAccount(prev=>prev&&prev.id===accounts.id?null:accounts);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container width-60\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"table-container relative\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Account List \"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Account_name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Currency\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Balance\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:accounts&&accounts.map(item=>/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:item.id}),/*#__PURE__*/_jsx(\"td\",{children:item.name}),/*#__PURE__*/_jsx(\"td\",{children:item.currency}),/*#__PURE__*/_jsx(\"td\",{children:item.balance}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleForm(item),className:\"btn-primary\",children:\"Transfer\"})})]})},item.id))})]})]}),selectedAccount&&/*#__PURE__*/_jsxs(\"div\",{className:\"absolute top-0 left-0 w-full h-full z-50 bg-white bg-opacity-95 p-6 shadow-xl\",children:[/*#__PURE__*/_jsx(TransferForm,{fromAccount:selectedAccount.name,accounts:accounts}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedAccount(null),className:\"mt-4 btn btn-secondary\",children:\"Close\"})]})]});}","map":{"version":3,"names":["useEffect","useState","TransferForm","React","jsx","_jsx","jsxs","_jsxs","AccountList","accounts","setAccount","selectedAccount","setSelectedAccount","view","setView","transactions","setTransactions","fetch","then","res","json","data","catch","err","console","log","message","toggleForm","prev","id","className","children","map","item","Fragment","name","currency","balance","onClick","fromAccount"],"sources":["D:/Fidelis projects/Treasury Movement Simulator/treasury-simulator/src/components/AccountList/AccountList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./account.css\";\r\nimport TransferForm from \"../Form/TransferForm\";\r\nimport React from \"react\";\r\n\r\nexport default function AccountList() {\r\n  const [accounts, setAccount] = useState([]);\r\n  const [selectedAccount, setSelectedAccount] = useState(null);\r\n  const [view, setView] = useState(\"accounts\"); // \"accounts\" or \"transactions\"\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // to get data from the API\r\n    fetch(\"http://localhost:5000/accounts\")\r\n      // promise\r\n      .then((res) => res.json())\r\n      // to update data\r\n      .then((data) => setAccount(data))\r\n      .catch((err) => console.log(err.message));\r\n  }, []);\r\n  const toggleForm = (accounts) => {\r\n    setSelectedAccount((prev) =>\r\n      prev && prev.id === accounts.id ? null : accounts\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"container width-60\">\r\n      <div className=\"table-container relative\">\r\n        <h2>Account List </h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Account_name</th>\r\n              <th>Currency</th>\r\n              <th>Balance</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {accounts &&\r\n              accounts.map((item) => (\r\n                <React.Fragment key={item.id}>\r\n                  <tr>\r\n                    <td>{item.id}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.currency}</td>\r\n                    <td>{item.balance}</td>\r\n                    <td>\r\n                      <button\r\n                        onClick={() => toggleForm(item)}\r\n                        className=\"btn-primary\"\r\n                      >\r\n                        Transfer\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                </React.Fragment>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {selectedAccount && (\r\n        <div className=\"absolute top-0 left-0 w-full h-full z-50 bg-white bg-opacity-95 p-6 shadow-xl\">\r\n          <TransferForm\r\n            fromAccount={selectedAccount.name}\r\n            accounts={accounts}\r\n          />\r\n          <button\r\n            onClick={() => setSelectedAccount(null)}\r\n            className=\"mt-4 btn btn-secondary\"\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}